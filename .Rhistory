if(add == FALSE)
plot(0., 0., axes = F, main = "", xlim = x, ylim = y, xlab = "",
ylab = "")
if(orientation == "paysage") {
dx2 <- (dx - min(dx))/(max(dx) - min(dx)) * (x[2.] - x[1.]) * 0.98 +
x[1.]
dy2 <- (dy - min(dy))/(max(dy) - min(dy)) * (y[2.] - y[1.]) * 0.98 +
y[1.]
seqbelow <- rep(y[1.], length(dx))
if(Fill == T)
confshade(dx2, seqbelow, dy2, col = col)
if (border==TRUE) points(dx2, dy2, type = "l", col = colline)
}
else {
dy2 <- (dx - min(dx))/(max(dx) - min(dx)) * (y[2.] - y[1.]) * 0.98 +
y[1.]
dx2 <- (dy - min(dy))/(max(dy) - min(dy)) * (x[2.] - x[1.]) * 0.98 +
x[1.]
seqleft <- rep(x[1.], length(dy))
if(Fill == T)
confshade2(dy2, seqleft, dx2, col = col)
if (border==TRUE) points(dx2, dy2, type = "l", col = colline)
}
polygon(x = c(x[1.], x[2.], x[2.], x[1.]),
y = c(y[2.], y[2.], y[1.], y[1.]), density = 0.)
}
data(swiss)
## png(file="swiss.png", width=600,height=400)
plotacpclust(swiss[,1:5], 1, 3, hcut=48)
## dev.off()
View(swiss)
3 + 4
install.packages("KernSmooth")
kernsmooth
citation()
citation("KernSmooth")
help("KernSmooth")
??KernSmooth
x <- 4
class(x)
x <- c(4, "a", TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x, y)
x <- list(2, "a", "b", TRUE)
x[[1]]
x[1]
x[[1]]
y = x[[1]]
class(y)
x <- 1:4
x
y <- 2
x + y
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x >= 10] <- 4
y = x[x >= 10] <- 4
y
y = x[x > 4] <- 10
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x >= 10] <- 4
x <- c(17, 14, 4, 5, 13, 12, 10)
y = x[x >= 11] <- 4
hw1_data <- read.csv("~/Downloads/hw1_data.csv")
View(hw1_data)
mean(ozone)
mean(hw1_data[1,])
ozone <- hw1_data[1,]
zone
ozone
ozone <- hw1_data[,1]
ozone
mean(ozone)
bad <- is.na(ozone)
x <- ozone(!bad)
x <- ozone[!bad]
mean(x)
View(hw1_data)
View(hw1_data)
subset <- hw1_data[hw1_data[,1] > 31]
ozone_greater_than_31 <- hw1_data[,1] > 31
temp_great_than_90 <- hw1[,1] > 90
temp_great_than_90 <- hw1_data[,1] > 90
filter1 <- hw1_data[onzone_greater_than_31]
ozone_greater_than_31 <- hw1_data[,1] > 31
filter1 <- hw1_data[ozone_greater_than_31]
filter1 <- hw1_data(ozone_greater_than_31)
hw1_data
zone_greater_than_31
ozone_greater_than_31
filtered1 <- hw1_data(ozone_greater_than_31)
filtered1 <- hw1_data(!ozone_greater_than_31)
hw1_data
filtered <- hw1_data(hw1_data[,1] > 30)
install.packages("swirl")
install.packages("swirl")
x <- 1:10
if (x>5){}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
source('~/Documents/GitHub Repositories/ProgrammingAssignment2/cacheVector.R')
cahcemean(10, 10, 10, 10)
cachemean(10, 10, 10, 10)
install.packages("~/Downloads/openintro_1.4.tgz", repos = NULL)
library("openintro", lib.loc="/Users/abneyj/Library/R/3.0/library")
install.packages(c("boot", "class", "cluster", "foreign", "KernSmooth", "lattice", "MASS", "Matrix", "mgcv", "nlme", "nnet", "rpart", "spatial", "survival"), lib="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
install.packages("knitr")
When you click the **Knit HTML** button a web page will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
library(datasets)
data(iris)
?iris
dimnames(iris)
data <- data(iris)
table(iris$Species)
View(iris)
mydata <- subset(iris, iris$Species == "virginica")
mean(mydata$Sepal.Legth)
mean(mydata$Sepal.Length)
colMeans(iris)
apply(iris[,1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
tapply(mtcars$cyl, mtcars$mpg, mean)
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$mpg, mtcars$cyl, mean)
debug(ls)
ls
ls
x
debug(x)
View(mtcars)
mean(mtcars$hp, mtcars$cyl == 4)
mean(subset(mtcars, mtcars$cyl == "4")$mtcars$hp)
mean(subset(mtcars, mtcars$cyl == "4")$hp)
mean(subset(mtcars, mtcars$cyl == "4")$hp) - mean(subset(mtcars, mtcars$cyl == "8")$hp)
setwd("~/Documents/R_Programming/projtemplate_tutorial/letters")
library("ProjectTemplate", lib.loc="/Users/abneyj/Library/R/3.0/library")
load.project()
library("reshape", lib.loc="/Users/abneyj/Library/R/3.0/library")
detach("package:reshape", unload=TRUE)
library("plyr", lib.loc="/Users/abneyj/Library/R/3.0/library")
detach("package:plyr", unload=TRUE)
setwd("~/Documents/R_Programming/ReproducibleResearch/RepData_PeerAssessment1")
activity <- read.csv("activity.csv")
cleaned_activity <- activity[activity, complete.cases(activity)]
cleaned_activity <- activity[complete.cases(activity),]
summary
summary(cleaned_activity)
## remove the NA step entries from the activity data
Title
========================================================
This is an R Markdown document. Markdown is a simple formatting syntax for authoring web pages (click the **Help** toolbar button for more details on using R Markdown).
When you click the **Knit HTML** button a web page will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r}
## read the activity.csv source data
activity <- read.csv("activity.csv")
## remove the NA step entries from the activity data
cleaned_activity <- activity[complete.cases(activity),]
```
You can also embed plots, for example:
```{r fig.width=7, fig.height=6}
plot(cars)
```
total_steps_per_day <- with(cleaned_activity,
aggregate(steps,
by = list(date),
sum))
total_steps_per_day <- with(cleaned_activity,
aggregate(steps,
by = list(date),
sum),
aggregate(steps, by = list(date), mean))
total_steps_per_day
total_steps_per_day <- with(cleaned_activity,
aggregate(steps,
by = list(date),
sum),
aggregate(steps,
by = list(date),
mean)
)
total_steps_per_day
total_steps_per_day <- with(cleaned_activity,
aggregate(steps,
by = list(date),
sum),
aggregate(steps,
by = list(date),
mean)
)
## Set up the names for total_steps_per_day
names(total_steps_per_day) <- list("date", "total steps")
head(total_steps_per_day)
total_steps_per_day <- with(cleaned_activity,
aggregate(steps,
by = list(date),
sum),
aggregate(steps,
by = list(date),
mean)
)
## Set up the names for total_steps_per_day
names(total_steps_per_day) <- list("date", "total_steps")
head(total_steps_per_day)
hist(total_steps_per_day$total_steps)
hist(total_steps_per_day$total_steps, breaks = total_steps_per_day$date)
hist(total_steps_per_day$total_steps, breaks = nrows(total_steps_per_day$date))
hist(total_steps_per_day$total_steps, breaks = nrow(total_steps_per_day$date))
hist(total_steps_per_day$total_steps, breaks = nrow(total_steps_per_day))
barplot(total_steps_per_day$date, total_steps_per_day$total_steps)
barplot(total_steps_per_day$total_steps, names.arg = total_steps_per_day$date)
barplot(total_steps_per_day$total_steps, names.arg = total_steps_per_day$date, col = "red")
barplot(total_steps_per_day$total_steps, names.arg = total_steps_per_day$date, col = "red", xlab = "Date", ylab = "Total Number of Steps")
barplot(total_steps_per_day$total_steps, names.arg = total_steps_per_day$date, col = "gray", xlab = "Date", ylab = "Total Number of Steps")
with(total_steps_per_day, hist(steps, by = list(date))
)
View(total_steps_per_day)
with(total_steps_per_day, hist(total_steps, by = list(date)))
with(total_steps_per_day, hist(total_steps, col = "blue"))
with(total_steps_per_day, hist(total_steps, col = "blue"))
with(total_steps_per_day, hist(total_steps, col = "blue"), breaks = 10)
with(total_steps_per_day, hist(total_steps, col = "blue", breaks = 10))
with(total_steps_per_day, hist(total_steps, col = "blue", breaks = 15))
with(total_steps_per_day, hist(total_steps, col = "blue", breaks = 20))
steps_per_day <- c(NA, NA, NA, NA)
names(steps_per_day) <- c("date",
"total_steps_per_day",
"mean_steps_per_day",
"median_steps_per_day")
steps_per_day$date <- cleaned_activity[1,] ## insert the dates
head(steps_per_day)
head(cleaned_activity)
steps_per_day <- c(NA, NA, NA, NA)
names(steps_per_day) <- c("date",
"total_steps_per_day",
"mean_steps_per_day",
"median_steps_per_day")
steps_per_day$date <- unique(cleaned_activity[,2]) ## insert the dates
## insert the the total steps per day data
steps_per_day <- with(cleaned_activity,
aggregate(steps,
by = list(date),
sum
)
) # returns "date" and
# "total steps per day" data
steps_per_day$mean_steps_per_day <- with(cleaned_activity,
aggregate(steps,
by = list(date),
mean
)
)[2] # return the mean column data
steps_per_day$median_steps_per_day <- with(cleaned_activity,
aggregate(steps,
by = list(date),
median
)
)[2] # return the mean column data
head(steps_per_day)
steps_per_day <- with(cleaned_activity,
aggregate(steps,
by = list(date),
sum
)
) # returns "date" and
# "total steps per day" data
head(step_per_day)
steps_per_day$mean_steps_per_day <- with(cleaned_activity,
aggregate(steps,
by = list(date),
mean
)
)[2] # return the mean column data
steps_per_day$median_steps_per_day <- with(cleaned_activity,
aggregate(steps,
by = list(date),
median
)
)[2] # return the mean column data
head(steps_per_day)
steps_per_day <- c(NA, NA, NA, NA)
names(steps_per_day) <- c("date",
"total_steps_per_day",
"mean_steps_per_day",
"median_steps_per_day")
steps_per_day$date <- unique(cleaned_activity[,2]) ## insert the dates
## insert the the total steps per day data
steps_per_day <- with(cleaned_activity,
aggregate(steps,
by = list(date),
sum
)
) # returns "date" and
# "total steps per day" data
head(steps_per_day)
steps_per_day$mean_steps_per_day <- with(cleaned_activity,
aggregate(steps,
by = list(date),
mean
)
)[2] # return the mean column data
steps_per_day$median_steps_per_day <- with(cleaned_activity,
aggregate(steps,
by = list(date),
median
)
)[2] # return the mean column data
head(steps_per_day)
steps_per_day <- c(NA, NA, NA, NA)
names(steps_per_day) <- c("date",
"total_steps_per_day",
"mean_steps_per_day",
"median_steps_per_day")
## insert the the total steps per day data
temp_steps_per_day <- with(cleaned_activity,
aggregate(steps,
by = list(date),
sum
)
) # returns "date" and
# "total steps per day" data
steps_per_day$date <- temp_steps_per_day[,1]
steps_per_day$total_steps_per_day <- temp_steps_per_day[,2]
head(steps_per_day)
steps_per_day <- c(NA, NA, NA, NA)
names(steps_per_day) <- c("date",
"total_steps_per_day",
"mean_steps_per_day",
"median_steps_per_day")
## insert the the total steps per day data
temp_steps_per_day <- with(cleaned_activity,
aggregate(steps,
by = list(date),
sum
)
) # returns "date" and
# "total steps per day" data
steps_per_day$date <- temp_steps_per_day[1,]
steps_per_day$total_steps_per_day <- temp_steps_per_day[2,]
head(steps_per_day)
steps_per_day$mean_steps_per_day <- with(cleaned_activity,
aggregate(steps,
by = list(date),
mean
)
)[2] # return the mean column data
steps_per_day$median_steps_per_day <- with(cleaned_activity,
aggregate(steps,
by = list(date),
median
)
)[2] # return the mean column data
head(steps_per_day)
steps_per_day <- c(NA,NA,NA,NA)
steps_per_day
names(steps_per_day) <- c("date",
"total_steps_per_day",
"mean_steps_per_day",
"median_steps_per_day")
steps_per_day
temp_steps_per_day <- with(cleaned_activity,
aggregate(steps,
by = list(date),
sum
)
) # returns "date" and
# "total steps per day" data
View(temp_steps_per_day)
steps_per_day$date <- temp_steps_per_day[,1]
steps_per_day <- c(NA, NA, NA, NA)
names(steps_per_day) <- c("date",
"total_steps_per_day",
"mean_steps_per_day",
"median_steps_per_day")
steps_per_day
temp_steps_per_day <- with(cleaned_activity,
aggregate(steps,
by = list(date),
sum
)
) # returns "date" and
# "total steps per day" data
temp_steps_per_day
temp_steps_per_day[,1]
temp_steps_per_day[1]
temp_steps_per_day <- with(cleaned_activity,
aggregate(steps,
by = list(date),
sum
)
) # returns "date" and
# "total steps per day" data
steps_per_day$date <- temp_steps_per_day[1]
steps_per_day$total_steps_per_day <- temp_steps_per_day[2]
head(steps_per_day)
temp_steps-per_day[1]
temp_steps_per_day[1]
total_steps_per_day
steps_per_day <- c(NA, NA, NA, NA)
names(steps_per_day) <- c("date",
"total_steps_per_day",
"mean_steps_per_day",
"median_steps_per_day")
steps_per_day
temp_steps_per_day <- with(cleaned_activity,
aggregate(steps,
by = list(date),
sum
)
) # returns "date" and
# "total steps per day" data
names(temp_steps_per_day) <- c("date", "total_steps_per_day")
temp_steps_per_day
steps_per_day$date <- temp_steps_per_day$date
steps_per_date
steps_per_day
steps_per_day <- c()
names(steps_per_day) <- c("date",
"total_steps_per_day",
"mean_steps_per_day",
"median_steps_per_day")
steps_per_day <- with(cleaned_activity,
aggregate(steps,
by = list(date),
sum
)
) # returns "date" and
# "total steps per day" data
names(steps_per_day) <- c("date", "total_steps_per_day")
steps_per_day
steps_per_day$mean_steps_per_day <- with(cleaned_activity,
aggregate(steps,
by = list(date),
mean
)
)[2] # return the mean column data
steps_per_day
names(steps_per_day) <- c("date",
"total_steps_per_day",
"mean_steps_per_day",
"median_steps_per_day"
)
steps_per_day$median_steps_per_day <- with(cleaned_activity,
aggregate(steps,
by = list(date),
median
)
)[2] # return the mean column data
steos_per_day
steps_per_day
names(steps_per_day) <- c("date",
"total_steps_per_day",
"mean_steps_per_day",
"median_steps_per_day"
)
head(steps_per_day)
names(steps_per_day) <- c("date",
"total_steps_per_day",
"mean_steps_per_day",
"median_steps_per_day"
)
steps_per-day
steps_per_day
steps_per_day <- c()
steps_per_day
steps_per_day <- c()
## insert the total steps per day data
steps_per_day <- with(cleaned_activity,
aggregate(steps,
by = list(date),
sum
)
) # returns "date" and
# "total steps per day" data
head(steps_per_day)
steps_per_day <- cbind(steps_per_day, with(cleaned_activity,
aggregate(steps,
by = list(date),
mean
)
)[2] # return the mean column data
)
head(steps_per_day)
steps_per_day <- cbind(steps_per_day, with(cleaned_activity,
aggregate(steps,
by = list(date),
median
)
)[2] # return the median column data
)
head(steps_per_day)
names(steps_per_day) <- c("date",
"total_steps_per_day",
"mean_steps_per_day",
"median_steps_per_day"
)
head(steps_per_day)
